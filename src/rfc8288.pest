// Copyright 2019 Arnau Siches
// 
// Licensed under the MIT license <LICENSE or http://opensource.org/licenses/MIT>.
// This file may not be copied, modified, or distributed except
// according to those terms.

ws           = _{ " " | "\t" }  // Whitespace
rws          = _{ " "+ }        // Required whitespace
ows          = _{ ws* }         // Optional whitespace
bws          = _{ ws* }         // Bad whitespace

// Atoms
char         = { !(NEWLINE | ws) ~ ANY }
pct_encoded  = @{ "%" ~ ASCII_HEX_DIGIT ~ ASCII_HEX_DIGIT }
attr_char    = @{ ASCII_ALPHANUMERIC
  | "!" | "#" | "$" | "&" | "+" | "-" | "." | "^" | "_" | "`" | "|" | "~"
}

// Expects a URI but allows anything but the end marker >
target       = @{ (!(">") ~ char)* }

// Expects a Token but allows anything but the end marker =
name         = @{ (!("=" | "*") ~ char)+ }

// Expects a valid RFC8187 string
encoding       = @{ (!("'") ~ char)+ }
language       = @{ (!("'") ~ char)* }
pct_value      = @{ (pct_encoded | attr_char)+ }
compound_value = _{ encoding ~ "'" ~ language ~ "'" ~ pct_value }

// Expects a Token or a Quoted String
token_value  = @{ (!("," | "\"") ~ char)* }
quoted_value = @{ (!("\"") ~ (ws | NEWLINE | char))* }
value        = _{ (("\"" ~ quoted_value ~ "\"") | token_value) }

star_param   = _{ name ~ "*" ~ (bws ~ "=" ~ bws ~ compound_value)? }
param        = { star_param | (name ~ (bws ~ "=" ~ bws ~ value)?) }

link         = { "<" ~ target ~ ">" ~ (ows ~ ";" ~ ows ~ param)* }
header       = { SOI ~ (ows ~ link ~ (ows ~ "," ~ ows ~ link)* ~ ows) ~ EOI }
